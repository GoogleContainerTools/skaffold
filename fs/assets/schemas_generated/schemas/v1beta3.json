{
  "type": "object",
  "anyOf": [
    {
      "$ref": "#/definitions/SkaffoldConfig"
    }
  ],
  "$schema": "http://json-schema-org/draft-07/schema#",
  "definitions": {
    "Artifact": {
      "type": "object",
      "anyOf": [
        {
          "properties": {
            "context": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "sync": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "default": "{}"
            }
          },
          "preferredOrder": [
            "image",
            "context",
            "sync"
          ],
          "additionalProperties": false
        },
        {
          "properties": {
            "context": {
              "type": "string"
            },
            "docker": {
              "$ref": "#/definitions/DockerArtifact"
            },
            "image": {
              "type": "string"
            },
            "sync": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "default": "{}"
            }
          },
          "preferredOrder": [
            "image",
            "context",
            "sync",
            "docker"
          ],
          "additionalProperties": false
        },
        {
          "properties": {
            "bazel": {
              "$ref": "#/definitions/BazelArtifact"
            },
            "context": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "sync": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "default": "{}"
            }
          },
          "preferredOrder": [
            "image",
            "context",
            "sync",
            "bazel"
          ],
          "additionalProperties": false
        },
        {
          "properties": {
            "context": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "jibMaven": {
              "$ref": "#/definitions/JibMavenArtifact"
            },
            "sync": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "default": "{}"
            }
          },
          "preferredOrder": [
            "image",
            "context",
            "sync",
            "jibMaven"
          ],
          "additionalProperties": false
        },
        {
          "properties": {
            "context": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "jibGradle": {
              "$ref": "#/definitions/JibGradleArtifact"
            },
            "sync": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "default": "{}"
            }
          },
          "preferredOrder": [
            "image",
            "context",
            "sync",
            "jibGradle"
          ],
          "additionalProperties": false
        }
      ],
      "description": "represents items that need to be built, along with the context in which they should be built.",
      "x-intellij-html-description": "represents items that need to be built, along with the context in which they should be built."
    },
    "BazelArtifact": {
      "properties": {
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": "[]"
        },
        "target": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "target",
        "args"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "describes an artifact built with Bazel.",
      "x-intellij-html-description": "describes an artifact built with Bazel."
    },
    "BuildConfig": {
      "type": "object",
      "anyOf": [
        {
          "properties": {
            "artifacts": {
              "items": {
                "$ref": "#/definitions/Artifact"
              },
              "type": "array"
            },
            "tagPolicy": {
              "$ref": "#/definitions/TagPolicy"
            }
          },
          "preferredOrder": [
            "artifacts",
            "tagPolicy"
          ],
          "additionalProperties": false
        },
        {
          "properties": {
            "artifacts": {
              "items": {
                "$ref": "#/definitions/Artifact"
              },
              "type": "array"
            },
            "local": {
              "$ref": "#/definitions/LocalBuild"
            },
            "tagPolicy": {
              "$ref": "#/definitions/TagPolicy"
            }
          },
          "preferredOrder": [
            "artifacts",
            "tagPolicy",
            "local"
          ],
          "additionalProperties": false
        },
        {
          "properties": {
            "artifacts": {
              "items": {
                "$ref": "#/definitions/Artifact"
              },
              "type": "array"
            },
            "googleCloudBuild": {
              "$ref": "#/definitions/GoogleCloudBuild"
            },
            "tagPolicy": {
              "$ref": "#/definitions/TagPolicy"
            }
          },
          "preferredOrder": [
            "artifacts",
            "tagPolicy",
            "googleCloudBuild"
          ],
          "additionalProperties": false
        },
        {
          "properties": {
            "artifacts": {
              "items": {
                "$ref": "#/definitions/Artifact"
              },
              "type": "array"
            },
            "kaniko": {
              "$ref": "#/definitions/KanikoBuild"
            },
            "tagPolicy": {
              "$ref": "#/definitions/TagPolicy"
            }
          },
          "preferredOrder": [
            "artifacts",
            "tagPolicy",
            "kaniko"
          ],
          "additionalProperties": false
        }
      ],
      "description": "contains all the configuration for the build steps",
      "x-intellij-html-description": "contains all the configuration for the build steps"
    },
    "DateTimeTagger": {
      "properties": {
        "format": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "format",
        "timezone"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains the configuration for the DateTime tagger.",
      "x-intellij-html-description": "contains the configuration for the DateTime tagger."
    },
    "DeployConfig": {
      "type": "object",
      "anyOf": [
        {
          "additionalProperties": false
        },
        {
          "properties": {
            "helm": {
              "$ref": "#/definitions/HelmDeploy"
            }
          },
          "preferredOrder": [
            "helm"
          ],
          "additionalProperties": false
        },
        {
          "properties": {
            "kubectl": {
              "$ref": "#/definitions/KubectlDeploy"
            }
          },
          "preferredOrder": [
            "kubectl"
          ],
          "additionalProperties": false
        },
        {
          "properties": {
            "kustomize": {
              "$ref": "#/definitions/KustomizeDeploy"
            }
          },
          "preferredOrder": [
            "kustomize"
          ],
          "additionalProperties": false
        }
      ],
      "description": "contains all the configuration needed by the deploy steps",
      "x-intellij-html-description": "contains all the configuration needed by the deploy steps"
    },
    "DockerArtifact": {
      "properties": {
        "buildArgs": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "cacheFrom": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": "[]"
        },
        "dockerfile": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "dockerfile",
        "buildArgs",
        "cacheFrom",
        "target"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "describes an artifact built from a Dockerfile, usually using `docker build`.",
      "x-intellij-html-description": "describes an artifact built from a Dockerfile, usually using <code>docker build</code>."
    },
    "DockerConfig": {
      "properties": {
        "path": {
          "type": "string"
        },
        "secretName": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "path",
        "secretName"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains information about the docker config.json to mount",
      "x-intellij-html-description": "contains information about the docker config.json to mount"
    },
    "EnvTemplateTagger": {
      "properties": {
        "template": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "template"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains the configuration for the envTemplate tagger.",
      "x-intellij-html-description": "contains the configuration for the envTemplate tagger."
    },
    "GitTagger": {
      "type": "object",
      "description": "contains the configuration for the git tagger.",
      "x-intellij-html-description": "contains the configuration for the git tagger."
    },
    "GoogleCloudBuild": {
      "properties": {
        "diskSizeGb": {
          "type": "integer"
        },
        "dockerImage": {
          "type": "string"
        },
        "gradleImage": {
          "type": "string"
        },
        "machineType": {
          "type": "string"
        },
        "mavenImage": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "projectId",
        "diskSizeGb",
        "machineType",
        "timeout",
        "dockerImage",
        "mavenImage",
        "gradleImage"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains the fields needed to do a remote build on Google Cloud Build.",
      "x-intellij-html-description": "contains the fields needed to do a remote build on Google Cloud Build."
    },
    "HelmConventionConfig": {
      "type": "object",
      "description": "represents image config in the syntax of image.repository and image.tag",
      "x-intellij-html-description": "represents image config in the syntax of image.repository and image.tag"
    },
    "HelmDeploy": {
      "properties": {
        "releases": {
          "items": {
            "$ref": "#/definitions/HelmRelease"
          },
          "type": "array"
        }
      },
      "preferredOrder": [
        "releases"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains the configuration needed for deploying with helm",
      "x-intellij-html-description": "contains the configuration needed for deploying with helm"
    },
    "HelmFQNConfig": {
      "properties": {
        "property": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "property"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "represents image config to use the FullyQualifiedImageName as param to set",
      "x-intellij-html-description": "represents image config to use the FullyQualifiedImageName as param to set"
    },
    "HelmImageStrategy": {
      "type": "object",
      "anyOf": [
        {
          "additionalProperties": false
        },
        {
          "properties": {
            "fqn": {
              "$ref": "#/definitions/HelmFQNConfig"
            }
          },
          "preferredOrder": [
            "fqn"
          ],
          "additionalProperties": false
        },
        {
          "properties": {
            "helm": {
              "$ref": "#/definitions/HelmConventionConfig"
            }
          },
          "preferredOrder": [
            "helm"
          ],
          "additionalProperties": false
        }
      ]
    },
    "HelmPackaged": {
      "properties": {
        "appVersion": {
          "type": "string",
          "description": "set the appVersion on the chart to this version",
          "x-intellij-html-description": "set the appVersion on the chart to this version"
        },
        "version": {
          "type": "string",
          "description": "sets the version on the chart to this semver version.",
          "x-intellij-html-description": "sets the version on the chart to this semver version."
        }
      },
      "preferredOrder": [
        "version",
        "appVersion"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "represents parameters for packaging helm chart.",
      "x-intellij-html-description": "represents parameters for packaging helm chart."
    },
    "HelmRelease": {
      "properties": {
        "chartPath": {
          "type": "string"
        },
        "imageStrategy": {
          "$ref": "#/definitions/HelmImageStrategy"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "overrides": {},
        "packaged": {
          "$ref": "#/definitions/HelmPackaged"
        },
        "recreatePods": {
          "type": "boolean",
          "default": "false"
        },
        "setValueTemplates": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "setValues": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "values": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "default": "{}"
        },
        "valuesFiles": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": "[]"
        },
        "version": {
          "type": "string"
        },
        "wait": {
          "type": "boolean",
          "default": "false"
        }
      },
      "preferredOrder": [
        "name",
        "chartPath",
        "valuesFiles",
        "values",
        "namespace",
        "version",
        "setValues",
        "setValueTemplates",
        "wait",
        "recreatePods",
        "overrides",
        "packaged",
        "imageStrategy"
      ],
      "additionalProperties": false,
      "type": "object"
    },
    "JibGradleArtifact": {
      "properties": {
        "project": {
          "type": "string",
          "description": "Only multi-module",
          "x-intellij-html-description": "Only multi-module"
        }
      },
      "preferredOrder": [
        "project"
      ],
      "additionalProperties": false,
      "type": "object"
    },
    "JibMavenArtifact": {
      "properties": {
        "module": {
          "type": "string",
          "description": "Only multi-module",
          "x-intellij-html-description": "Only multi-module"
        },
        "profile": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "module",
        "profile"
      ],
      "additionalProperties": false,
      "type": "object"
    },
    "KanikoBuild": {
      "properties": {
        "buildContext": {
          "$ref": "#/definitions/KanikoBuildContext"
        },
        "cache": {
          "$ref": "#/definitions/KanikoCache"
        },
        "dockerConfig": {
          "$ref": "#/definitions/DockerConfig"
        },
        "flags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": "[]"
        },
        "image": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "pullSecret": {
          "type": "string"
        },
        "pullSecretName": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "buildContext",
        "cache",
        "flags",
        "pullSecret",
        "pullSecretName",
        "namespace",
        "timeout",
        "image",
        "dockerConfig"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains the fields needed to do a on-cluster build using the kaniko image",
      "x-intellij-html-description": "contains the fields needed to do a on-cluster build using the kaniko image"
    },
    "KanikoBuildContext": {
      "properties": {
        "gcsBucket": {
          "type": "string"
        },
        "localDir": {
          "$ref": "#/definitions/LocalDir"
        }
      },
      "preferredOrder": [
        "gcsBucket",
        "localDir"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains the different fields available to specify a kaniko build context",
      "x-intellij-html-description": "contains the different fields available to specify a kaniko build context"
    },
    "KanikoCache": {
      "properties": {
        "repo": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "repo"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains fields related to kaniko caching",
      "x-intellij-html-description": "contains fields related to kaniko caching"
    },
    "KubectlDeploy": {
      "properties": {
        "flags": {
          "$ref": "#/definitions/KubectlFlags"
        },
        "manifests": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": "[]"
        },
        "remoteManifests": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": "[]"
        }
      },
      "preferredOrder": [
        "manifests",
        "remoteManifests",
        "flags"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains the configuration needed for deploying with `kubectl apply`",
      "x-intellij-html-description": "contains the configuration needed for deploying with <code>kubectl apply</code>"
    },
    "KubectlFlags": {
      "properties": {
        "apply": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": "[]"
        },
        "delete": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": "[]"
        },
        "global": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": "[]"
        }
      },
      "preferredOrder": [
        "global",
        "apply",
        "delete"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "describes additional options flags that are passed on the command line to kubectl either on every command (Global), on creations (Apply) or deletions (Delete).",
      "x-intellij-html-description": "describes additional options flags that are passed on the command line to kubectl either on every command (Global), on creations (Apply) or deletions (Delete)."
    },
    "KustomizeDeploy": {
      "properties": {
        "flags": {
          "$ref": "#/definitions/KubectlFlags"
        },
        "path": {
          "type": "string"
        }
      },
      "preferredOrder": [
        "path",
        "flags"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains the configuration needed for deploying with kustomize.",
      "x-intellij-html-description": "contains the configuration needed for deploying with kustomize."
    },
    "LocalBuild": {
      "properties": {
        "push": {
          "type": "boolean"
        },
        "useBuildkit": {
          "type": "boolean",
          "default": "false"
        },
        "useDockerCLI": {
          "type": "boolean",
          "default": "false"
        }
      },
      "preferredOrder": [
        "push",
        "useDockerCLI",
        "useBuildkit"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains the fields needed to do a build on the local docker daemon and optionally push to a repository.",
      "x-intellij-html-description": "contains the fields needed to do a build on the local docker daemon and optionally push to a repository."
    },
    "LocalDir": {
      "type": "object",
      "description": "represents the local directory kaniko build context",
      "x-intellij-html-description": "represents the local directory kaniko build context"
    },
    "Profile": {
      "properties": {
        "build": {
          "$ref": "#/definitions/BuildConfig"
        },
        "deploy": {
          "$ref": "#/definitions/DeployConfig"
        },
        "name": {
          "type": "string"
        },
        "test": {
          "$ref": "#/definitions/TestConfig"
        }
      },
      "preferredOrder": [
        "name",
        "build",
        "test",
        "deploy"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "additional configuration that overrides default configuration when it is activated.",
      "x-intellij-html-description": "additional configuration that overrides default configuration when it is activated."
    },
    "ShaTagger": {
      "type": "object",
      "description": "contains the configuration for the SHA tagger.",
      "x-intellij-html-description": "contains the configuration for the SHA tagger."
    },
    "SkaffoldConfig": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "build": {
          "$ref": "#/definitions/BuildConfig"
        },
        "deploy": {
          "$ref": "#/definitions/DeployConfig"
        },
        "kind": {
          "type": "string"
        },
        "profiles": {
          "items": {
            "$ref": "#/definitions/Profile"
          },
          "type": "array"
        },
        "test": {
          "$ref": "#/definitions/TestConfig"
        }
      },
      "preferredOrder": [
        "apiVersion",
        "kind",
        "build",
        "test",
        "deploy",
        "profiles"
      ],
      "additionalProperties": false,
      "type": "object"
    },
    "TagPolicy": {
      "properties": {
        "dateTime": {
          "$ref": "#/definitions/DateTimeTagger"
        },
        "envTemplate": {
          "$ref": "#/definitions/EnvTemplateTagger"
        },
        "gitCommit": {
          "$ref": "#/definitions/GitTagger"
        },
        "sha256": {
          "$ref": "#/definitions/ShaTagger"
        }
      },
      "preferredOrder": [
        "gitCommit",
        "sha256",
        "envTemplate",
        "dateTime"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "contains all the configuration for the tagging step",
      "x-intellij-html-description": "contains all the configuration for the tagging step"
    },
    "TestCase": {
      "properties": {
        "image": {
          "type": "string"
        },
        "structureTests": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": "[]"
        }
      },
      "preferredOrder": [
        "image",
        "structureTests"
      ],
      "additionalProperties": false,
      "type": "object",
      "description": "a struct containing all the specified test configuration for an image.",
      "x-intellij-html-description": "a struct containing all the specified test configuration for an image."
    },
    "TestConfig": {
      "items": {
        "$ref": "#/definitions/TestCase"
      },
      "type": "array"
    }
  }
}
