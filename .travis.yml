dist: xenial

language: go
go: "1.15.x"
go_import_path: /skaffold

# skip release branches and version tags
branches:
  except:
    - /^release\/.*/
    - /^v\d+\..*$/

git:
  submodules: false

_registry_mirror: &registry_mirror
  before_script:
    - tmpdaemon=$(mktemp)
    - sudo jq '."registry-mirrors" += ["https://mirror.gcr.io"]' /etc/docker/daemon.json > $tmpdaemon
    - sudo mv $tmpdaemon /etc/docker/daemon.json
    - sudo systemctl daemon-reload
    - sudo systemctl restart docker
    - docker system info

install:
  # enable tcp_mtu_probing=1 to enable MTU path discovery when ICMP blackhole detected
  # bump fs.file-max to workaround rancher/k3d#407
  - if [ $TRAVIS_OS_NAME = linux ]; then
      sudo sysctl -w net.ipv4.tcp_mtu_probing=1;
      sudo sysctl -w fs.file-max=2000000;
      sudo sysctl -p;
    fi

_integration_test: &integration_test
  os: linux
  language: minimal
  before_install:
    # Skip integration tests for `docs`-only changes (only works for PR-based dev workflows like Skaffold's).
    - git diff --name-only "$TRAVIS_BRANCH"... | grep -v '^docs/' || travis_terminate 0
  cache:
    directories:
      - $HOME/.cache/go-build
      - $HOME/.gradle
      - $HOME/.m2

# https://docs.travis-ci.com/user/docker/#installing-a-newer-docker-version
# include in jobs where the docker version needs to be newer than what is shipped with xenial
_upgrade_docker: &upgrade_docker
  before_install:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - sudo apt-get update
    - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce

jobs:
  include:
    - os: linux
      <<: *registry_mirror
      name: "linters"
      script:
        - make linters
    - os: linux
      <<: *registry_mirror
      name: "checks"
      script:
        - git remote set-branches --add origin main && git fetch
        - make checks
      cache:
        directories:
          - $HOME/.cache/go-build
    - os: linux
      <<: *registry_mirror
      name: "Linux unit"
      script:
        - make coverage
      cache:
        directories:
          - $HOME/.cache/go-build
    - os: osx
      name: "OSX unit"
      script:
        - make quicktest
      cache:
        directories:
          - $HOME/.cache/go-build
    - os: windows
      name: "Windows unit"
      script:
        - go test -short -timeout 60s ./...
      cache:
        directories:
          - C:\\Users\\travis\\AppData\\Local\\go-build
    - name: "kind integration partition 0"
      <<: *integration_test
      <<: *upgrade_docker
      <<: *registry_mirror
      script:
        - env IT_PARTITION=0 make integration-in-kind
    - name: "kind integration partition 1"
      <<: *integration_test
      <<: *upgrade_docker
      <<: *registry_mirror
      script:
        - env IT_PARTITION=1 make integration-in-kind
    - name: "kind integration partition 2"
      <<: *integration_test
      <<: *upgrade_docker
      <<: *registry_mirror
      script:
        - env IT_PARTITION=2 make integration-in-kind
    - name: "kind integration partition 3"
      <<: *integration_test
      <<: *upgrade_docker
      <<: *registry_mirror
      script:
        - env IT_PARTITION=3 make integration-in-kind
    - name: "k3d integration partition 0"
      <<: *integration_test
      <<: *upgrade_docker
      <<: *registry_mirror
      script:
        - env IT_PARTITION=0 make integration-in-k3d
    - name: "k3d integration partition 1"
      <<: *integration_test
      <<: *upgrade_docker
      <<: *registry_mirror
      script:
        - env IT_PARTITION=1 make integration-in-k3d
    - name: "k3d integration partition 2"
      <<: *integration_test
      <<: *upgrade_docker
      <<: *registry_mirror
      script:
        - env IT_PARTITION=2 make integration-in-k3d
    - name: "k3d integration partition 3"
      <<: *integration_test
      <<: *upgrade_docker
      <<: *registry_mirror
      script:
        - env IT_PARTITION=3 make integration-in-k3d
    - os: linux
      name: "diag/Linux unit"
      <<: *registry_mirror
      script:
        - make -f Makefile.diag coverage
      cache:
        directories:
          - $HOME/.cache/go-build
    - os: osx
      name: "diag/OSX unit"
      script:
        - make -f Makefile.diag test
      cache:
        directories:
          - $HOME/.cache/go-build
